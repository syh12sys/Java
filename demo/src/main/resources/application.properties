
#spring.datasource.mater.username=root
#spring.datasource.mater.password=SYS12sys
#spring.datasource.mater.url=jdbc:mysql://localhost:3306/usercenter?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
#spring.datasource.mater.driver-class-name=com.mysql.cj.jdbc.Driver
#
#spring.datasource.slave.username=ReadOnlyUser
#spring.datasource.slave.password=SYS12sys
#spring.datasource.slave.url=jdbc:mysql://localhost:3306/usercenter?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
#spring.datasource.slave.driver-class-name=com.mysql.cj.jdbc.Driver


# 测试工程有两个数据源Hikari和sharing，自动加载的时候先加载Hikari，再加载sharing
# 如果不允许覆盖，那么sharing会报错，从而加载不上sharing的数据源
spring.main.allow-bean-definition-overriding=true

# 两个数据源
sharding.jdbc.datasource.names=db0,db1

sharding.jdbc.datasource.db0.type=com.alibaba.druid.pool.DruidDataSource
sharding.jdbc.datasource.db0.driver-class-name=com.mysql.jdbc.Driver
sharding.jdbc.datasource.db0.url=jdbc:mysql://localhost:3306/db0?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
sharding.jdbc.datasource.db0.username=root
sharding.jdbc.datasource.db0.password=SYS12sys

sharding.jdbc.datasource.db1.type=com.alibaba.druid.pool.DruidDataSource
sharding.jdbc.datasource.db1.driver-class-name=com.mysql.jdbc.Driver
sharding.jdbc.datasource.db1.url=jdbc:mysql://localhost:3306/db1?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
sharding.jdbc.datasource.db1.username=root
sharding.jdbc.datasource.db1.password=SYS12sys

# 使用行表达式，根据分片键user_id进行分库
sharding.jdbc.config.sharding.default-database-strategy.inline.sharding-column=user_id
sharding.jdbc.config.sharding.default-database-strategy.inline.algorithm-expression=db$->{user_id % 2}

sharding.jdbc.config.sharding.tables.user.logicTable: user
sharding.jdbc.config.sharding.tables.user.actual-data-nodes=db$->{0..1}.user